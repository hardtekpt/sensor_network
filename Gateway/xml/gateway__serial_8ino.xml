<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="gateway__serial_8ino" kind="file" language="C++">
    <compoundname>gateway_serial.ino</compoundname>
    <includes refid="comms__protocol_8h" local="yes">comms_protocol.h</includes>
    <incdepgraph>
      <node id="4">
        <label>SPI.h</label>
      </node>
      <node id="6">
        <label>gateway_serial_definitions.h</label>
        <link refid="gateway__serial__definitions_8h"/>
      </node>
      <node id="8">
        <label>aes256.h</label>
      </node>
      <node id="1">
        <label>/sensor_network/gateway_serial/gateway_serial.ino</label>
        <link refid="gateway__serial_8ino"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="2">
        <label>comms_protocol.h</label>
        <link refid="comms__protocol_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cppQueue.h</label>
      </node>
      <node id="5">
        <label>LoRa.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gateway__serial_8ino_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
<para>Arduino setup function. </para>
        </briefdescription>
        <detaileddescription>
<sect2 id="gateway__serial_8ino_1autotoc_md0">
<title>Function: setup</title>
<para>Runs once at boot. Configure the serial communication. Configure the LoRa radio. Configure the sensors and actuators input mode</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
</sect2>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/gateway_serial.ino" line="24" column="6" bodyfile="/sensor_network/gateway_serial/gateway_serial.ino" bodystart="24" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="gateway__serial_8ino_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
<para>Arduino loop function. </para>
        </briefdescription>
        <detaileddescription>
<sect2 id="gateway__serial_8ino_1autotoc_md1">
<title>Function: loop</title>
<para>Main loop function. checks for incoming uplink messages and downlink requests from the server. calls getMsgFromQueueAndSend on fixed schedules to avoid congestion of the communication channel and sends an uplink message with the node status periodically.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
</sect2>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/gateway_serial.ino" line="63" column="6" bodyfile="/sensor_network/gateway_serial/gateway_serial.ino" bodystart="63" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gateway script - send sensor data to gateway and receive commands from gateway. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Francisco Santos (<ulink url="mailto:francisco.velez@tecnico.ulisboa.pt">francisco.velez@tecnico.ulisboa.pt</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2022-08-09</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comms__protocol_8h" kindref="compound">comms_protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gateway__serial_8ino_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>Serial.begin(<ref refid="gateway__serial__definitions_8h_1ad4455691936f92fdd6c37566fc58ba1f" kindref="member">BAUD_RATE</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(ESP32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin(SCK,<sp/>MISO,<sp/>MOSI,<sp/><ref refid="gateway__serial__definitions_8h_1a88f7782e210e61586baf33b93240d905" kindref="member">SS</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>LoRa.setPins(<ref refid="gateway__serial__definitions_8h_1a88f7782e210e61586baf33b93240d905" kindref="member">SS</ref>,<sp/><ref refid="gateway__serial__definitions_8h_1ac5d957e4fd3dc11cd97a54cf9ca057a4" kindref="member">RST</ref>,<sp/><ref refid="gateway__serial__definitions_8h_1a95c9efcc1a55a72bd5cca0bcfcd18a0c" kindref="member">DIO0</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LoRa.begin(<ref refid="comms__protocol_8h_1a3e2e72fc88af24173ffb387f913af46a" kindref="member">frequency</ref>))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.write(</highlight><highlight class="stringliteral">&quot;LoRa<sp/>init<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>failed,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>LoRa.setTxPower(<ref refid="comms__protocol_8h_1a12d49d4800e0d38a899920e831d9e594" kindref="member">txPower</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>LoRa.setSignalBandwidth(<ref refid="comms__protocol_8h_1aacf3a14e005217a72253af251126b997" kindref="member">signalBandwidth</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>LoRa.setCodingRate4(<ref refid="comms__protocol_8h_1ad4ec9bca325aa0279afa600576973bd4" kindref="member">codingRateDenominator</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>LoRa.setSpreadingFactor(<ref refid="comms__protocol_8h_1a593d148617786934b5b925be6310c092" kindref="member">spreadingFactor</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>LoRa.setSyncWord(<ref refid="gateway__serial__definitions_8h_1ade7b2a67f256bbe99e2fc48a80068ee8" kindref="member">netID</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>LoRa.enableCrc();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="comms__protocol_8cpp_1af107f16dd1552bb658c1936141d9ae7a" kindref="member">LoRa_rxMode</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="comms__protocol_8cpp_1afad07369259cd493d556473fa3ba8433" kindref="member">prevMil</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>Serial.write(</highlight><highlight class="stringliteral">&quot;Startup<sp/>complete\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gateway__serial_8ino_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentMillis<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize<sp/>=<sp/>LoRa.parsePacket();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="comms__protocol_8cpp_1a54817002e33761dc61558b1138749dfb" kindref="member">onReceive</ref>(packetSize);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>downlink<sp/>msgs<sp/>from<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Serial.available()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>dlMsg<sp/>=<sp/>Serial.readString();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[dlMsg.length()];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>dlMsg.toCharArray(msg,<sp/>dlMsg.length());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="comms__protocol_8cpp_1a15c330bc3cd75ecf3800db120a1a22d3" kindref="member">relayDownlinkMsg</ref>(msg);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if((currentMillis-prevMilR)<sp/>&gt;<sp/>RELAY_INTERVAL){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="comms__protocol_8cpp_1af05ee2950c64bf21cb7aa13a8280163f" kindref="member">relayMsgFromQueueToServer</ref>(currentMillis);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((currentMillis-<ref refid="comms__protocol_8cpp_1afad07369259cd493d556473fa3ba8433" kindref="member">prevMil</ref>)<sp/>&gt;<sp/><ref refid="comms__protocol_8h_1a13f06f86104b4525a9429ff04d1c852d" kindref="member">TIMEOUT_INTERVAL</ref>){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sendStatusRequest(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="comms__protocol_8cpp_1a091b9218e6ed5b060bc3d1104dde7109" kindref="member">getMsgFromQueueAndSend</ref>(currentMillis);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/sensor_network/gateway_serial/gateway_serial.ino"/>
  </compounddef>
</doxygen>
