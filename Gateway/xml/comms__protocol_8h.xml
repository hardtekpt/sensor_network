<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="comms__protocol_8h" kind="file" language="C++">
    <compoundname>comms_protocol.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">SPI.h</includes>
    <includes local="no">LoRa.h</includes>
    <includes refid="gateway__serial__definitions_8h" local="yes">gateway_serial_definitions.h</includes>
    <includes local="no">cppQueue.h</includes>
    <includes local="no">aes256.h</includes>
    <includedby refid="comms__protocol_8cpp" local="yes">/sensor_network/gateway_serial/comms_protocol.cpp</includedby>
    <includedby refid="gateway__serial_8ino" local="yes">/sensor_network/gateway_serial/gateway_serial.ino</includedby>
    <incdepgraph>
      <node id="3">
        <label>SPI.h</label>
      </node>
      <node id="5">
        <label>gateway_serial_definitions.h</label>
        <link refid="gateway__serial__definitions_8h"/>
      </node>
      <node id="7">
        <label>aes256.h</label>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>/sensor_network/gateway_serial/comms_protocol.h</label>
        <link refid="comms__protocol_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cppQueue.h</label>
      </node>
      <node id="4">
        <label>LoRa.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/sensor_network/gateway_serial/comms_protocol.cpp</label>
        <link refid="comms__protocol_8cpp"/>
      </node>
      <node id="3">
        <label>/sensor_network/gateway_serial/gateway_serial.ino</label>
        <link refid="gateway__serial_8ino"/>
      </node>
      <node id="1">
        <label>/sensor_network/gateway_serial/comms_protocol.h</label>
        <link refid="comms__protocol_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstr_payload" prot="public">strPayload</innerclass>
    <innerclass refid="structstr_msg" prot="public">strMsg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="comms__protocol_8h_1aafd24a334088de3d7fef309914d49101" prot="public" static="no">
        <name>IMPLEMENTATION</name>
        <initializer>FIFO</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="23" column="10" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1ade67653366207335f3e1ec53c4d762b1" prot="public" static="no">
        <name>RELAY_INTERVAL</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="26" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a3ea85ebbdc9c6fece31540aeff4887da" prot="public" static="no">
        <name>MAX_JSON_PAYLOAD_SIZE</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="27" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1ae2132d5b9e92cbf586fc556351235b75" prot="public" static="no">
        <name>MAX_R_QUEUE_SIZE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="28" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a623ec78b7909090dbedac4af1d52abb4" prot="public" static="no">
        <name>MAX_QUEUE_SIZE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="29" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1addaaa188262c960b2aa51012d684d084" prot="public" static="no">
        <name>MAX_N_RETRY</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="30" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a13f06f86104b4525a9429ff04d1c852d" prot="public" static="no">
        <name>TIMEOUT_INTERVAL</name>
        <initializer>3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="31" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1ad51ded0bbd705f02f73fc60c0b721ced" prot="public" static="no">
        <name>BLOCK_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="33" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a6303f7392a2d06be5a121c54278d561b" prot="public" static="no">
        <name>MAX_PAYLOAD_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="34" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a44257c425d2f3b28f78f1f0f048c3307" prot="public" static="no">
        <name>ENC_BLOCK_SIZE</name>
        <initializer>(1*<ref refid="comms__protocol_8h_1ad51ded0bbd705f02f73fc60c0b721ced" kindref="member">BLOCK_SIZE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="35" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1acf744f77bd35653cd140f056c5945650" prot="public" static="no">
        <name>MAX_ENC_PAYLOAD_SIZE</name>
        <initializer>((<ref refid="comms__protocol_8h_1a6303f7392a2d06be5a121c54278d561b" kindref="member">MAX_PAYLOAD_SIZE</ref>/<ref refid="comms__protocol_8h_1ad51ded0bbd705f02f73fc60c0b721ced" kindref="member">BLOCK_SIZE</ref>)*<ref refid="comms__protocol_8h_1a44257c425d2f3b28f78f1f0f048c3307" kindref="member">ENC_BLOCK_SIZE</ref>)+1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="36" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a2d996237e082b78b41771b5aa1a6eae1" prot="public" static="no">
        <name>KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="37" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1a44f75a932d96b59ace67a29d83376492" prot="public" static="no">
        <name>MAX_MSG_ID</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="39" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comms__protocol_8h_1ab9fe47395310b34fa1ceb112c9ca10e2" prot="public" static="no">
        <name>BROADCAST_ID</name>
        <initializer>0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="41" column="9" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="comms__protocol_8h_1a9e00f468ca1d333265668dbd3c712260" prot="public" static="no">
        <type>struct <ref refid="structstr_payload" kindref="compound">strPayload</ref></type>
        <definition>typedef struct strPayload Payload</definition>
        <argsstring></argsstring>
        <name>Payload</name>
        <briefdescription>
<para>Data structure that holds the data for all the fields in the payload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="94" column="9"/>
      </memberdef>
      <memberdef kind="typedef" id="comms__protocol_8h_1ad014e4a11d57536042f2c321a8bbbb05" prot="public" static="no">
        <type>struct <ref refid="structstr_msg" kindref="compound">strMsg</ref></type>
        <definition>typedef struct strMsg Msg</definition>
        <argsstring></argsstring>
        <name>Msg</name>
        <briefdescription>
<para>Data structure that holds the encrypted payload along with other important fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="107" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="comms__protocol_8h_1a3992de70c5e45ac584c2a8d58ab38d20" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t keys[][KEY_SIZE]</definition>
        <argsstring>[][KEY_SIZE]</argsstring>
        <name>keys</name>
        <initializer>= {{ 
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x0f
},{ 
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
},
{ 
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x2f
},
{ 
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x3f
},{ 
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x4f
}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="44" column="15" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a3e2e72fc88af24173ffb387f913af46a" prot="public" static="no" mutable="no">
        <type>const long</type>
        <definition>const long frequency</definition>
        <argsstring></argsstring>
        <name>frequency</name>
        <initializer>= 868E6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="74" column="12" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a12d49d4800e0d38a899920e831d9e594" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int txPower</definition>
        <argsstring></argsstring>
        <name>txPower</name>
        <initializer>= 14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="75" column="11" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a593d148617786934b5b925be6310c092" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int spreadingFactor</definition>
        <argsstring></argsstring>
        <name>spreadingFactor</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="76" column="11" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1aacf3a14e005217a72253af251126b997" prot="public" static="no" mutable="no">
        <type>const long</type>
        <definition>const long signalBandwidth</definition>
        <argsstring></argsstring>
        <name>signalBandwidth</name>
        <initializer>= 125E3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="77" column="12" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1ad4ec9bca325aa0279afa600576973bd4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int codingRateDenominator</definition>
        <argsstring></argsstring>
        <name>codingRateDenominator</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="78" column="11" bodyfile="/sensor_network/gateway_serial/comms_protocol.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a0a46edecb372aedab666bb0b845ba6b8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int currMsg</definition>
        <argsstring></argsstring>
        <name>currMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="109" column="12" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="14" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="109" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1ad43c3812e6d13e0518d9f8b8f463ffcf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="110" column="12" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="15" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="110" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a0dba2457ef8608730abaa9e430b5d11e" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long prevMilR</definition>
        <argsstring></argsstring>
        <name>prevMilR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="111" column="22" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="16" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="111" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1afad07369259cd493d556473fa3ba8433" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long prevMil</definition>
        <argsstring></argsstring>
        <name>prevMil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="112" column="22" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="17" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="112" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1acba68ade9b1d4ddf6d4289092bd9f21d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int msgCount</definition>
        <argsstring></argsstring>
        <name>msgCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="113" column="12" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="18" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="113" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a34c34cdfeb680f7809c1038e328b715d" prot="public" static="no" mutable="no">
        <type>cppQueue</type>
        <definition>cppQueue relay_q</definition>
        <argsstring></argsstring>
        <name>relay_q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="115" column="17" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="115" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1ae5e28ce2507fc32dcc8a3d0cba131653" prot="public" static="no" mutable="no">
        <type>cppQueue</type>
        <definition>cppQueue msg_q</definition>
        <argsstring></argsstring>
        <name>msg_q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="116" column="17" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="116" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="comms__protocol_8h_1a38ebab104a77fc87f092da8bc068a58f" prot="public" static="no" mutable="no">
        <type>aes256_context</type>
        <definition>aes256_context ctxt</definition>
        <argsstring></argsstring>
        <name>ctxt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="117" column="23" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="22" bodyend="-1" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="117" declcolumn="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="comms__protocol_8h_1af107f16dd1552bb658c1936141d9ae7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoRa_rxMode</definition>
        <argsstring>()</argsstring>
        <name>LoRa_rxMode</name>
        <briefdescription>
<para>Sets the LoRa radio to receive mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="119" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="30" bodyend="33" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1af2b412b05e4e8c055d44f3eaab81a3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoRa_txMode</definition>
        <argsstring>()</argsstring>
        <name>LoRa_txMode</name>
        <briefdescription>
<para>Sets the LoRa radio to transmit mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="120" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="40" bodyend="43" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a267d79c14db504f1c516440fc4e5393b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoRa_sendMessage</definition>
        <argsstring>(byte *message, byte nodeID)</argsstring>
        <name>LoRa_sendMessage</name>
        <param>
          <type>byte *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>nodeID</declname>
        </param>
        <briefdescription>
<para>Sets the radio to transmit mode, sends a message string using the LoRa radio and sets the radio back to receive mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>message to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the destination node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="121" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="53" bodyend="61" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1ac8271805926e924f56b4d0f889c8bec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mymin</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>mymin</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>returns the minimum value between two integers </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first integer to compare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second integer to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int the smaller between a and b </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="122" column="5" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="100" bodyend="104" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="122" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a0c9867df000c907e29c02fbd4e1349c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* decryptMsg</definition>
        <argsstring>(char msg[MAX_PAYLOAD_SIZE+1])</argsstring>
        <name>decryptMsg</name>
        <param>
          <type>char</type>
          <declname>msg</declname>
          <array>[MAX_PAYLOAD_SIZE+1]</array>
        </param>
        <briefdescription>
<para>Decrypts a message string using the AES256 algorythm with the corresponding node key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>message string to be decrypted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char* an array of characters containing the decrypted message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="123" column="7" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="86" bodyend="91" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="123" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a54817002e33761dc61558b1138749dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void onReceive</definition>
        <argsstring>(int packetSize)</argsstring>
        <name>onReceive</name>
        <param>
          <type>int</type>
          <declname>packetSize</declname>
        </param>
        <briefdescription>
<para>Called every time a new message is received. Filters unwanted messages, decrypts the payload, gets the relevant fields from the payload and sends back an acknowledge message if necessary. Finally, calls constructJsonAndAddToQueue to build a json message destined for the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the incoming message in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="124" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="364" bodyend="415" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a219dcdade25952b91806066261a45539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void onTxDone</definition>
        <argsstring>()</argsstring>
        <name>onTxDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="125" column="6" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a43b76b5cd582329628593a29c236dfd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte *</type>
        <definition>byte* encrypt</definition>
        <argsstring>(char msg[MAX_PAYLOAD_SIZE])</argsstring>
        <name>encrypt</name>
        <param>
          <type>char</type>
          <declname>msg</declname>
          <array>[MAX_PAYLOAD_SIZE]</array>
        </param>
        <briefdescription>
<para>Encrypts a message (character array) using the AES256 algorythm with the corresponding node key The encryption is made by encrypting blocks of 16 bytes and joining them together. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>message array to be decrypted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>byte* a byte array containing the encrypted message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="126" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="70" bodyend="78" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1abd22add5125783eb2eb84d3aeffe7f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendAck</definition>
        <argsstring>(byte msgID, byte nodeID)</argsstring>
        <name>sendAck</name>
        <param>
          <type>byte</type>
          <declname>msgID</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>nodeID</declname>
        </param>
        <briefdescription>
<para>Send an acknowledge message confirming the reception of an uplink transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msgID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the message being acknowledged </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the destination node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="127" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="113" bodyend="133" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1af05ee2950c64bf21cb7aa13a8280163f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void relayMsgFromQueueToServer</definition>
        <argsstring>(unsigned long currentMillis)</argsstring>
        <name>relayMsgFromQueueToServer</name>
        <param>
          <type>unsigned long</type>
          <declname>currentMillis</declname>
        </param>
        <briefdescription>
<para>Get a message from the relay queue and send it to the server via serial communication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>current time in millisenconds since boot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="128" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="274" bodyend="290" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1afaa2caa37a55c9125471b5b6f1f6324b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constructJsonAndAddToQueue</definition>
        <argsstring>(Payload p)</argsstring>
        <name>constructJsonAndAddToQueue</name>
        <param>
          <type><ref refid="comms__protocol_8h_1a9e00f468ca1d333265668dbd3c712260" kindref="member">Payload</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Builds a json string containg the message information and adds the string to the relay queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>payload structure containing the message information along with RSSI, SNR and battery voltage </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="129" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="298" bodyend="319" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a15c330bc3cd75ecf3800db120a1a22d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void relayDownlinkMsg</definition>
        <argsstring>(char *dlMsg)</argsstring>
        <name>relayDownlinkMsg</name>
        <param>
          <type>char *</type>
          <declname>dlMsg</declname>
        </param>
        <briefdescription>
<para>Relays the downlink messages received from the server to the corresponding node. Formats the message into a compact form. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>character array containing the downlink message to be relayed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="130" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="327" bodyend="355" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a091b9218e6ed5b060bc3d1104dde7109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getMsgFromQueueAndSend</definition>
        <argsstring>(unsigned long currentMillis)</argsstring>
        <name>getMsgFromQueueAndSend</name>
        <param>
          <type>unsigned long</type>
          <declname>currentMillis</declname>
        </param>
        <briefdescription>
<para>Get a message from the send queue and send it. Implements retransmission in case an acknowledge message is not received. Aware of a failed transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>current time in millisenconds since boot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="131" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="217" bodyend="266" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1a8a00db8781effc6b141f2c4fd8646254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendStatusRequest</definition>
        <argsstring>(byte nodeID)</argsstring>
        <name>sendStatusRequest</name>
        <param>
          <type>byte</type>
          <declname>nodeID</declname>
        </param>
        <briefdescription>
<para>Send a status request message asking for a specific node to respond with a status update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the destination node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="132" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="141" bodyend="172" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="comms__protocol_8h_1afae50b92afd675e09293f2930472cb58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendActuatorControl</definition>
        <argsstring>(byte nodeID, byte actID, byte actVal)</argsstring>
        <name>sendActuatorControl</name>
        <param>
          <type>byte</type>
          <declname>nodeID</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>actID</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>actVal</declname>
        </param>
        <briefdescription>
<para>Send a control message to set a value for a node&apos;s actuator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the destination node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the actuator to control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actVal</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to set the actuator to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/sensor_network/gateway_serial/comms_protocol.h" line="133" column="6" bodyfile="/sensor_network/gateway_serial/comms_protocol.cpp" bodystart="182" bodyend="208" declfile="/sensor_network/gateway_serial/comms_protocol.h" declline="133" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for the communication protocol library. Contains the used data structures, function declaration and general configuartion options for the library. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Francisco Santos (<ulink url="mailto:francisco.velez@tecnico.ulisboa.pt">francisco.velez@tecnico.ulisboa.pt</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2022-08-10</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>COMMS_PROTOCOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMS_PROTOCOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LoRa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gateway__serial__definitions_8h" kindref="compound">gateway_serial_definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppQueue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aes256.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="comms__protocol_8h_1aafd24a334088de3d7fef309914d49101" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>IMPLEMENTATION<sp/><sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LoRa<sp/>msg<sp/>payload<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="comms__protocol_8h_1ade67653366207335f3e1ec53c4d762b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RELAY_INTERVAL<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="comms__protocol_8h_1a3ea85ebbdc9c6fece31540aeff4887da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_JSON_PAYLOAD_SIZE<sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="comms__protocol_8h_1ae2132d5b9e92cbf586fc556351235b75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_R_QUEUE_SIZE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="comms__protocol_8h_1a623ec78b7909090dbedac4af1d52abb4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_QUEUE_SIZE<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="comms__protocol_8h_1addaaa188262c960b2aa51012d684d084" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_N_RETRY<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="comms__protocol_8h_1a13f06f86104b4525a9429ff04d1c852d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMEOUT_INTERVAL<sp/>3000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="comms__protocol_8h_1ad51ded0bbd705f02f73fc60c0b721ced" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCK_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="comms__protocol_8h_1a6303f7392a2d06be5a121c54278d561b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PAYLOAD_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="comms__protocol_8h_1a44257c425d2f3b28f78f1f0f048c3307" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENC_BLOCK_SIZE<sp/>(1*BLOCK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="comms__protocol_8h_1acf744f77bd35653cd140f056c5945650" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ENC_PAYLOAD_SIZE<sp/>((MAX_PAYLOAD_SIZE/BLOCK_SIZE)*ENC_BLOCK_SIZE)+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="comms__protocol_8h_1a2d996237e082b78b41771b5aa1a6eae1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEY_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="comms__protocol_8h_1a44f75a932d96b59ace67a29d83376492" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MSG_ID<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="comms__protocol_8h_1ab9fe47395310b34fa1ceb112c9ca10e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BROADCAST_ID<sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encryption<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="comms__protocol_8h_1a3992de70c5e45ac584c2a8d58ab38d20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="comms__protocol_8h_1a3992de70c5e45ac584c2a8d58ab38d20" kindref="member">keys</ref>[][<ref refid="comms__protocol_8h_1a2d996237e082b78b41771b5aa1a6eae1" kindref="member">KEY_SIZE</ref>]<sp/>=<sp/>{{<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0a,<sp/>0x0b,<sp/>0x0c,<sp/>0x0d,<sp/>0x0e,<sp/>0x0f,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x1b,<sp/>0x1c,<sp/>0x1d,<sp/>0x1e,<sp/>0x0f</highlight></codeline>
<codeline lineno="49"><highlight class="normal">},{<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0a,<sp/>0x0b,<sp/>0x0c,<sp/>0x0d,<sp/>0x0e,<sp/>0x0f,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x1b,<sp/>0x1c,<sp/>0x1d,<sp/>0x1e,<sp/>0x1f</highlight></codeline>
<codeline lineno="54"><highlight class="normal">},</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0a,<sp/>0x0b,<sp/>0x0c,<sp/>0x0d,<sp/>0x0e,<sp/>0x0f,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x1b,<sp/>0x1c,<sp/>0x1d,<sp/>0x1e,<sp/>0x2f</highlight></codeline>
<codeline lineno="60"><highlight class="normal">},</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0a,<sp/>0x0b,<sp/>0x0c,<sp/>0x0d,<sp/>0x0e,<sp/>0x0f,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x1b,<sp/>0x1c,<sp/>0x1d,<sp/>0x1e,<sp/>0x3f</highlight></codeline>
<codeline lineno="66"><highlight class="normal">},{<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0a,<sp/>0x0b,<sp/>0x0c,<sp/>0x0d,<sp/>0x0e,<sp/>0x0f,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x1b,<sp/>0x1c,<sp/>0x1d,<sp/>0x1e,<sp/>0x4f</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LoRa<sp/>Modem<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="comms__protocol_8h_1a3e2e72fc88af24173ffb387f913af46a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a3e2e72fc88af24173ffb387f913af46a" kindref="member">frequency</ref><sp/>=<sp/>868E6;</highlight></codeline>
<codeline lineno="75" refid="comms__protocol_8h_1a12d49d4800e0d38a899920e831d9e594" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a12d49d4800e0d38a899920e831d9e594" kindref="member">txPower</ref><sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="76" refid="comms__protocol_8h_1a593d148617786934b5b925be6310c092" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a593d148617786934b5b925be6310c092" kindref="member">spreadingFactor</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="77" refid="comms__protocol_8h_1aacf3a14e005217a72253af251126b997" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1aacf3a14e005217a72253af251126b997" kindref="member">signalBandwidth</ref><sp/>=<sp/>125E3;</highlight></codeline>
<codeline lineno="78" refid="comms__protocol_8h_1ad4ec9bca325aa0279afa600576973bd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1ad4ec9bca325aa0279afa600576973bd4" kindref="member">codingRateDenominator</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structstr_payload" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstr_payload" kindref="compound">strPayload</ref><sp/>{</highlight></codeline>
<codeline lineno="85" refid="structstr_payload_1a0db71f6fd950a7bb85b5e7188bd40297" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a0db71f6fd950a7bb85b5e7188bd40297" kindref="member">nodeID</ref>;</highlight></codeline>
<codeline lineno="86" refid="structstr_payload_1a7882d27fc12112a627451a4a13eab65a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a7882d27fc12112a627451a4a13eab65a" kindref="member">sensorID</ref>;</highlight></codeline>
<codeline lineno="87" refid="structstr_payload_1a31b398065408aab6dc2d243df91e2944" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a31b398065408aab6dc2d243df91e2944" kindref="member">sensorVal</ref>;</highlight></codeline>
<codeline lineno="88" refid="structstr_payload_1a3d454073f20da85f732a59f9074ca59b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a3d454073f20da85f732a59f9074ca59b" kindref="member">msgID</ref>;</highlight></codeline>
<codeline lineno="89" refid="structstr_payload_1af62a2714d6172638d34b9dad4ef97c99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1af62a2714d6172638d34b9dad4ef97c99" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="90" refid="structstr_payload_1a04dac68afca9a6290674e59fe7cac617" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a04dac68afca9a6290674e59fe7cac617" kindref="member">RSSI</ref>;</highlight></codeline>
<codeline lineno="91" refid="structstr_payload_1afc4b498b987652cead802e2aaf8f1d60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1afc4b498b987652cead802e2aaf8f1d60" kindref="member">SNR</ref>;</highlight></codeline>
<codeline lineno="92" refid="structstr_payload_1a2c5560c423790431588c64ed17994782" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1a2c5560c423790431588c64ed17994782" kindref="member">VBAT</ref>;</highlight></codeline>
<codeline lineno="93" refid="structstr_payload_1acd7b3a3f385fed96c4382efb358dd24f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structstr_payload_1acd7b3a3f385fed96c4382efb358dd24f" kindref="member">milis</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><ref refid="comms__protocol_8h_1a9e00f468ca1d333265668dbd3c712260" kindref="member">Payload</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structstr_msg" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstr_msg" kindref="compound">strMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="structstr_msg_1aa317c38597aa7c3a77cae48539b97148" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1aa317c38597aa7c3a77cae48539b97148" kindref="member">msg</ref>[<ref refid="comms__protocol_8h_1acf744f77bd35653cd140f056c5945650" kindref="member">MAX_ENC_PAYLOAD_SIZE</ref>];</highlight></codeline>
<codeline lineno="102" refid="structstr_msg_1a400dc636a83c062cf829e45113b491ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1a400dc636a83c062cf829e45113b491ce" kindref="member">msgID</ref>;</highlight></codeline>
<codeline lineno="103" refid="structstr_msg_1a47471bcac685d831ce94b264ca546382" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1a47471bcac685d831ce94b264ca546382" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="104" refid="structstr_msg_1a8b1395060c53caed01701835bd6375f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1a8b1395060c53caed01701835bd6375f3" kindref="member">nodeID</ref>;</highlight></codeline>
<codeline lineno="105" refid="structstr_msg_1aab92ad6c5be82d968ad76c153af60106" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1aab92ad6c5be82d968ad76c153af60106" kindref="member">actID</ref>;</highlight></codeline>
<codeline lineno="106" refid="structstr_msg_1a6e95896c44998e4d0c631eb4648a6396" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="structstr_msg_1a6e95896c44998e4d0c631eb4648a6396" kindref="member">actVal</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/><ref refid="comms__protocol_8h_1ad014e4a11d57536042f2c321a8bbbb05" kindref="member">Msg</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a0a46edecb372aedab666bb0b845ba6b8" kindref="member">currMsg</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a0dba2457ef8608730abaa9e430b5d11e" kindref="member">prevMilR</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1afad07369259cd493d556473fa3ba8433" kindref="member">prevMil</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1acba68ade9b1d4ddf6d4289092bd9f21d" kindref="member">msgCount</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>cppQueue<sp/><ref refid="comms__protocol_8h_1a34c34cdfeb680f7809c1038e328b715d" kindref="member">relay_q</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>cppQueue<sp/><ref refid="comms__protocol_8h_1ae5e28ce2507fc32dcc8a3d0cba131653" kindref="member">msg_q</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>aes256_context<sp/><ref refid="comms__protocol_8h_1a38ebab104a77fc87f092da8bc068a58f" kindref="member">ctxt</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1af107f16dd1552bb658c1936141d9ae7a" kindref="member">LoRa_rxMode</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1af2b412b05e4e8c055d44f3eaab81a3ec" kindref="member">LoRa_txMode</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a267d79c14db504f1c516440fc4e5393b" kindref="member">LoRa_sendMessage</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>*message,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nodeID);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1ac8271805926e924f56b4d0f889c8bec1" kindref="member">mymin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<ref refid="comms__protocol_8h_1a0c9867df000c907e29c02fbd4e1349c8" kindref="member">decryptMsg</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[<ref refid="comms__protocol_8h_1a6303f7392a2d06be5a121c54278d561b" kindref="member">MAX_PAYLOAD_SIZE</ref>+1]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a54817002e33761dc61558b1138749dfb" kindref="member">onReceive</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a219dcdade25952b91806066261a45539" kindref="member">onTxDone</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>*<ref refid="comms__protocol_8h_1a43b76b5cd582329628593a29c236dfd8" kindref="member">encrypt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[<ref refid="comms__protocol_8h_1a6303f7392a2d06be5a121c54278d561b" kindref="member">MAX_PAYLOAD_SIZE</ref>]);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1abd22add5125783eb2eb84d3aeffe7f2f" kindref="member">sendAck</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>msgID,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nodeID);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1af05ee2950c64bf21cb7aa13a8280163f" kindref="member">relayMsgFromQueueToServer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentMillis);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1afaa2caa37a55c9125471b5b6f1f6324b" kindref="member">constructJsonAndAddToQueue</ref>(<ref refid="structstr_payload" kindref="compound">Payload</ref><sp/>p);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a15c330bc3cd75ecf3800db120a1a22d3" kindref="member">relayDownlinkMsg</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dlMsg);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a091b9218e6ed5b060bc3d1104dde7109" kindref="member">getMsgFromQueueAndSend</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentMillis);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1a8a00db8781effc6b141f2c4fd8646254" kindref="member">sendStatusRequest</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nodeID);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comms__protocol_8h_1afae50b92afd675e09293f2930472cb58" kindref="member">sendActuatorControl</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nodeID,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>actVal);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/sensor_network/gateway_serial/comms_protocol.h"/>
  </compounddef>
</doxygen>
